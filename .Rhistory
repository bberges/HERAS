### plot Biotic data
#plot_biotic(Cruise,
#            Biology,
#            Catch,
#            Haul,
#            speciesList,
#            figurePath)
### plot Acoustic data
#plot_acoustic(Data,
#              Cruise,
#              Haul,
#              figurePath)
# make report
mk_report_ICESdB(Cruise,
Biology,
Catch,
Haul,
Data,
speciesList,
reportPath)
}
idxDir
### ============================================================================
### Document Assessment
###
### 18/03/2018 Added Standard Graph database output
### ============================================================================
# library(FLCore)
# library(FLSAM)
# WKPELA 2018
# load("//community.ices.dk@SSL/DavWWWRoot/ExpertGroups/benchmarks/2018/wkherring/2014 Meeting docs/06. Data/NSAS/SAM/NSH_final.RData")
# HAWG 2018
#load("//community.ices.dk@SSL/DavWWWRoot/ExpertGroups/HAWG/2018 Meeting docs1/05. Data/NSAS/NSH_HAWG2018_sf.Rdata")
path <- "C:/git/wg_HAWG/NSAS/"
try(setwd(path),silent=FALSE)
output.dir          <-  file.path(".","results/assessment_output/")        # figures directory
res.dir          <-  file.path(".","results/")        # figures directory
old.opt           <- options("width","scipen")
options("width"=75,"scipen"=1000)
load(paste(res.dir,"/NSH_HAWG2019_sf.RData",sep=""))
sam.out.file      <- FLSAM.out(NSH,NSH.tun,NSH.sam,format="TABLE 2.6.3.%i North Sea Herring.")
#sam.out.file      <- FLSAM.out(NSHs3$residual,NSH.tun,NSH3f.sam,format="TABLE 2.7.1.%i North Sea Herring.")
write(sam.out.file,file=paste(output.dir,"/sam.out",sep="."))
options("width"=old.opt$width,"scipen"=old.opt$scipen)
#
##And finally, write the results out in the lowestoft VPA format for further analysis
writeFLStock(NSH,output.file=file.path(output.dir,"NSAS_47d3_"))
stockSummaryTable <- cbind(rec(NSH.sam)$year,
rec(NSH.sam)$value,      rec(NSH.sam)$lbnd,    rec(NSH.sam)$ubnd,
tsb(NSH.sam)$value,      tsb(NSH.sam)$lbnd,    tsb(NSH.sam)$ubnd,
ssb(NSH.sam)$value,      ssb(NSH.sam)$lbnd,    ssb(NSH.sam)$ubnd,
catch(NSH.sam)$value,    catch(NSH.sam)$lbnd,  catch(NSH.sam)$ubnd,
catch(NSH.sam)$value / ssb(NSH.sam)$value, catch(NSH.sam)$lbnd / ssb(NSH.sam)$lbnd, catch(NSH.sam)$ubnd / ssb(NSH.sam)$ubnd,
fbar(NSH.sam)$value,     fbar(NSH.sam)$lbnd,   fbar(NSH.sam)$ubnd,
c(quantMeans(harvest(NSH.sam)[ac(0:1),])),
c(sop(NSH),NA),
c(catch(NSH),NA))
colnames(stockSummaryTable) <-
c("Year",paste(rep(c("Recruits Age 0 (Thousands)","Total biomass (tonnes)","Spawing biomass (tonnes)",
"Landings (tonnes)","Yield / SSB (ratio)","Mean F ages 2-6"),each=3),c("Mean","Low","High")),"Mean F ages 0-1","SoP (%)","WG Catch")
stockSummaryTable[nrow(stockSummaryTable),] <- NA
stockSummaryTable[nrow(stockSummaryTable),"Spawing biomass (tonnes) Mean"] <- 2271364
stockSummaryTable[nrow(stockSummaryTable),2:4] <- c(rec(NSH.sam)$value[nrow(rec(NSH.sam))],rec(NSH.sam)$lbnd[nrow(rec(NSH.sam))],rec(NSH.sam)$ubnd[nrow(rec(NSH.sam))])
# write.csv(stockSummaryTable,file=file.path(output.dir,paste(name(NSH),"stockSummaryTable.csv",sep="_")))
#write.csv(stockSummaryTable,file=file.path("NSAS","stockSummaryTable.csv"))
write.csv(stockSummaryTable,file=file.path(output.dir,"stockSummaryTable.csv"))
options("width"=old.opt$width,"scipen"=old.opt$scipen)
load(paste(res.dir,"/NSH_HAWG2019_sf_retro.RData",sep=""))
SSB_mr  <- mean(mohns.rho(NSH.retro,span=7,ref.year=2018,type="ssb")$rho)
fbar_mr <- mean(mohns.rho(NSH.retro,span=7,ref.year=2018,type="fbar")$rho)
rec_mr  <- mean(mohns.rho(NSH.retro,span=7,ref.year=2018,type="rec")$rho)
rm(list = ls())
#### Packages ####
library(mapplots) # draw.pie
data("coast") # coastlines
library(maps)
library(mapdata)
library(gdata)  # drop.levels
library(reshape) # melt and cast
library(gstat)
library(sp)
path <- 'C:/git/HERAS/'
try(setwd(path),silent=TRUE)
mainPath      <- file.path(".")
rawDataPath   <- file.path(".","data/raw_data/")
dataPath      <- file.path(".","data/")
figurePath    <- file.path(".","figures/raw_data/")
reportPath    <- file.path(".","reports/raw_data/")
functionPath  <- file.path(".","functions/")
source(file.path(functionPath,"load_ICESdB.R"))
source(file.path(functionPath,"plot_biotic.R"))
source(file.path(functionPath,"plot_acoustic.R"))
source(file.path(functionPath,"mk_report_ICESdB.R"))
mkReport  <- TRUE
mkPlot    <- TRUE
# load species list
fileName <- 'species_codes_201911.csv'
speciesList <- read.csv(file.path(dataPath,fileName), fill = TRUE, header = TRUE)
# build directory list
dataDirs <- list.dirs(path = rawDataPath, full.names = TRUE, recursive = TRUE)
dataDirs <- dataDirs[2:length(dataDirs)]
# loop on directories (i.e. each country)
for(idxDir in dataDirs){
fileMat <- list.files(path = idxDir,pattern = "\\.csv$")
### load data
for(idxFile in fileMat){
A <- load_ICESdb(idxDir,idxFile)
header <- A[[1]]
for(idxHeader in 2:length(A)){
eval(parse(text = paste0(header[idxHeader-1],
'=A[[',
as.character(idxHeader),']]')))
}
}
if(mkPlot){
### plot Biotic data
plot_biotic(Cruise,
Biology,
Catch,
Haul,
speciesList,
figurePath)
### plot Acoustic data
plot_acoustic(Data,
Cruise,
Haul,
figurePath)
}
if(mkReport){
# make report
mk_report_ICESdB(Cruise,
Biology,
Catch,
Haul,
Data,
speciesList,
reportPath)
}
}
rm(list = ls())
#### Packages ####
library(mapplots) # draw.pie
data("coast") # coastlines
library(maps)
library(mapdata)
library(gdata)  # drop.levels
library(reshape) # melt and cast
library(gstat)
library(sp)
path <- 'C:/git/HERAS/'
try(setwd(path),silent=TRUE)
mainPath      <- file.path(".")
rawDataPath   <- file.path(".","data/raw_data/")
dataPath      <- file.path(".","data/")
figurePath    <- file.path(".","figures/raw_data/")
reportPath    <- file.path(".","reports/raw_data/")
functionPath  <- file.path(".","functions/")
source(file.path(functionPath,"load_ICESdB.R"))
source(file.path(functionPath,"plot_biotic.R"))
source(file.path(functionPath,"plot_acoustic.R"))
source(file.path(functionPath,"mk_report_ICESdB.R"))
mkReport  <- TRUE
mkPlot    <- TRUE
# load species list
fileName <- 'species_codes_201911.csv'
speciesList <- read.csv(file.path(dataPath,fileName), fill = TRUE, header = TRUE)
# build directory list
dataDirs <- list.dirs(path = rawDataPath, full.names = TRUE, recursive = TRUE)
dataDirs <- dataDirs[2:length(dataDirs)]
# loop on directories (i.e. each country)
for(idxDir in dataDirs){
fileMat <- list.files(path = idxDir,pattern = "\\.csv$")
### load data
for(idxFile in fileMat){
A <- load_ICESdb(idxDir,idxFile)
header <- A[[1]]
for(idxHeader in 2:length(A)){
eval(parse(text = paste0(header[idxHeader-1],
'=A[[',
as.character(idxHeader),']]')))
}
}
if(mkPlot){
### plot Biotic data
plot_biotic(Cruise,
Biology,
Catch,
Haul,
speciesList,
figurePath)
### plot Acoustic data
plot_acoustic(Data,
Cruise,
Haul,
figurePath)
}
if(mkReport){
# make report
mk_report_ICESdB(Cruise,
Biology,
Catch,
Haul,
Data,
speciesList,
reportPath)
}
}
dev.off()
dev.off()
dev.off()
rm(list = ls())
#### Packages ####
library(mapplots) # draw.pie
data("coast") # coastlines
library(maps)
library(mapdata)
library(gdata)  # drop.levels
library(reshape) # melt and cast
library(gstat)
library(sp)
path <- 'C:/git/HERAS/'
try(setwd(path),silent=TRUE)
mainPath      <- file.path(".")
rawDataPath   <- file.path(".","data/raw_data/")
dataPath      <- file.path(".","data/")
figurePath    <- file.path(".","figures/raw_data/")
reportPath    <- file.path(".","reports/raw_data/")
functionPath  <- file.path(".","functions/")
source(file.path(functionPath,"load_ICESdB.R"))
source(file.path(functionPath,"plot_biotic.R"))
source(file.path(functionPath,"plot_acoustic.R"))
source(file.path(functionPath,"mk_report_ICESdB.R"))
mkReport  <- TRUE
mkPlot    <- TRUE
# load species list
fileName <- 'species_codes_201911.csv'
speciesList <- read.csv(file.path(dataPath,fileName), fill = TRUE, header = TRUE)
# build directory list
dataDirs <- list.dirs(path = rawDataPath, full.names = TRUE, recursive = TRUE)
dataDirs <- dataDirs[2:length(dataDirs)]
# loop on directories (i.e. each country)
for(idxDir in dataDirs){
fileMat <- list.files(path = idxDir,pattern = "\\.csv$")
### load data
for(idxFile in fileMat){
A <- load_ICESdb(idxDir,idxFile)
header <- A[[1]]
for(idxHeader in 2:length(A)){
eval(parse(text = paste0(header[idxHeader-1],
'=A[[',
as.character(idxHeader),']]')))
}
}
if(mkPlot){
### plot Biotic data
plot_biotic(Cruise,
Biology,
Catch,
Haul,
speciesList,
figurePath)
### plot Acoustic data
plot_acoustic(Data,
Cruise,
Haul,
figurePath)
}
if(mkReport){
# make report
mk_report_ICESdB(Cruise,
Biology,
Catch,
Haul,
Data,
speciesList,
reportPath)
}
}
rm(list = ls())
#### Packages ####
library(mapplots) # draw.pie
data("coast") # coastlines
library(maps)
library(mapdata)
library(gdata)  # drop.levels
library(reshape) # melt and cast
library(gstat)
library(sp)
path <- 'C:/git/HERAS/'
try(setwd(path),silent=TRUE)
mainPath      <- file.path(".")
rawDataPath   <- file.path(".","data/raw_data/")
dataPath      <- file.path(".","data/")
figurePath    <- file.path(".","figures/raw_data/")
reportPath    <- file.path(".","reports/raw_data/")
functionPath  <- file.path(".","functions/")
source(file.path(functionPath,"load_ICESdB.R"))
source(file.path(functionPath,"plot_biotic.R"))
source(file.path(functionPath,"plot_acoustic.R"))
source(file.path(functionPath,"mk_report_ICESdB.R"))
mkReport  <- TRUE
mkPlot    <- TRUE
# load species list
fileName <- 'species_codes_201911.csv'
speciesList <- read.csv(file.path(dataPath,fileName), fill = TRUE, header = TRUE)
# build directory list
dataDirs <- list.dirs(path = rawDataPath, full.names = TRUE, recursive = TRUE)
dataDirs <- dataDirs[2:length(dataDirs)]
# loop on directories (i.e. each country)
for(idxDir in dataDirs){
fileMat <- list.files(path = idxDir,pattern = "\\.csv$")
### load data
for(idxFile in fileMat){
A <- load_ICESdb(idxDir,idxFile)
header <- A[[1]]
for(idxHeader in 2:length(A)){
eval(parse(text = paste0(header[idxHeader-1],
'=A[[',
as.character(idxHeader),']]')))
}
}
if(mkPlot){
### plot Biotic data
plot_biotic(Cruise,
Biology,
Catch,
Haul,
speciesList,
figurePath)
### plot Acoustic data
plot_acoustic(Data,
Cruise,
Haul,
figurePath)
}
if(mkReport){
# make report
mk_report_ICESdB(Cruise,
Biology,
Catch,
Haul,
Data,
speciesList,
reportPath)
}
}
dev.off()
dev.off()
rm(list = ls())
#### Packages ####
library(mapplots) # draw.pie
data("coast") # coastlines
library(maps)
library(mapdata)
library(gdata)  # drop.levels
library(reshape) # melt and cast
library(gstat)
library(sp)
path <- 'C:/git/HERAS/'
try(setwd(path),silent=TRUE)
mainPath      <- file.path(".")
rawDataPath   <- file.path(".","data/raw_data/")
dataPath      <- file.path(".","data/")
figurePath    <- file.path(".","figures/raw_data/")
reportPath    <- file.path(".","reports/raw_data/")
functionPath  <- file.path(".","functions/")
source(file.path(functionPath,"load_ICESdB.R"))
source(file.path(functionPath,"plot_biotic.R"))
source(file.path(functionPath,"plot_acoustic.R"))
source(file.path(functionPath,"mk_report_ICESdB.R"))
mkReport  <- TRUE
mkPlot    <- TRUE
# load species list
fileName <- 'species_codes_201911.csv'
speciesList <- read.csv(file.path(dataPath,fileName), fill = TRUE, header = TRUE)
# build directory list
dataDirs <- list.dirs(path = rawDataPath, full.names = TRUE, recursive = TRUE)
dataDirs <- dataDirs[2:length(dataDirs)]
# loop on directories (i.e. each country)
for(idxDir in dataDirs){
fileMat <- list.files(path = idxDir,pattern = "\\.csv$")
### load data
for(idxFile in fileMat){
A <- load_ICESdb(idxDir,idxFile)
header <- A[[1]]
for(idxHeader in 2:length(A)){
eval(parse(text = paste0(header[idxHeader-1],
'=A[[',
as.character(idxHeader),']]')))
}
}
if(mkPlot){
### plot Biotic data
plot_biotic(Cruise,
Biology,
Catch,
Haul,
speciesList,
figurePath)
### plot Acoustic data
plot_acoustic(Data,
Cruise,
Haul,
figurePath)
}
if(mkReport){
# make report
mk_report_ICESdB(Cruise,
Biology,
Catch,
Haul,
Data,
speciesList,
reportPath)
}
}
rm(list = ls())
#### Packages ####
library(mapplots) # draw.pie
data("coast") # coastlines
library(maps)
library(mapdata)
library(gdata)  # drop.levels
library(reshape) # melt and cast
library(gstat)
library(sp)
path <- 'C:/git/HERAS/'
try(setwd(path),silent=TRUE)
mainPath      <- file.path(".")
rawDataPath   <- file.path(".","data/raw_data/")
dataPath      <- file.path(".","data/")
figurePath    <- file.path(".","figures/raw_data/")
reportPath    <- file.path(".","reports/raw_data/")
functionPath  <- file.path(".","functions/")
source(file.path(functionPath,"load_ICESdB.R"))
source(file.path(functionPath,"plot_biotic.R"))
source(file.path(functionPath,"plot_acoustic.R"))
source(file.path(functionPath,"mk_report_ICESdB.R"))
mkReport  <- TRUE
mkPlot    <- TRUE
# load species list
fileName <- 'species_codes_201911.csv'
speciesList <- read.csv(file.path(dataPath,fileName), fill = TRUE, header = TRUE)
# build directory list
dataDirs <- list.dirs(path = rawDataPath, full.names = TRUE, recursive = TRUE)
dataDirs <- dataDirs[2:length(dataDirs)]
# loop on directories (i.e. each country)
for(idxDir in dataDirs){
fileMat <- list.files(path = idxDir,pattern = "\\.csv$")
### load data
for(idxFile in fileMat){
A <- load_ICESdb(idxDir,idxFile)
header <- A[[1]]
for(idxHeader in 2:length(A)){
eval(parse(text = paste0(header[idxHeader-1],
'=A[[',
as.character(idxHeader),']]')))
}
}
if(mkPlot){
### plot Biotic data
plot_biotic(Cruise,
Biology,
Catch,
Haul,
speciesList,
figurePath)
### plot Acoustic data
plot_acoustic(Data,
Cruise,
Haul,
figurePath)
}
if(mkReport){
# make report
mk_report_ICESdB(Cruise,
Biology,
Catch,
Haul,
Data,
speciesList,
reportPath)
}
}
# Explore Length Frequencies and plot for analysis
dataPath <- 'C:/Users/berge057/OneDrive - WageningenUR/projects/surveys/2019_HERAS/post_cruise/preparation/test/'
fileName <- '0919S_lengthsMatrix.csv'
myTab <- read.csv(file.path(dataPath,fileName), fill = TRUE, header = TRUE)
source('C:/Users/berge057/OneDrive - WageningenUR/projects/surveys/2019_HERAS/post_cruise/preparation/test/ExploreLF_v2.r')
rm(list = ls())
# Explore Length Frequencies and plot for analysis
dataPath <- 'C:/Users/berge057/OneDrive - WageningenUR/projects/surveys/2019_HERAS/post_cruise/preparation/test/'
fileName <- '0919S_lengthsMatrix.csv'
myTab <- read.csv(file.path(dataPath,fileName), fill = TRUE, header = TRUE)
View(myTab)
read.csv(file.path(dataPath,fileName))
source('C:/Users/berge057/OneDrive - WageningenUR/projects/surveys/2019_HERAS/post_cruise/preparation/test/ExploreLF_v2.r')
rm(list = ls())
# Explore Length Frequencies and plot for analysis
dataPath <- 'C:/Users/berge057/OneDrive - WageningenUR/projects/surveys/2019_HERAS/post_cruise/preparation/test/'
fileName <- 'HERAS-0919S-lengths.csv'
myTab <- read.csv(file.path(dataPath,fileName), fill = TRUE, header = TRUE)
View(myTab)
source('C:/Users/berge057/OneDrive - WageningenUR/projects/surveys/2019_HERAS/post_cruise/preparation/test/ExploreLF_v2.r')
source('C:/Users/berge057/OneDrive - WageningenUR/projects/surveys/2019_HERAS/post_cruise/preparation/test/ExploreLF_v2.r')
source('C:/Users/berge057/OneDrive - WageningenUR/projects/surveys/2019_HERAS/post_cruise/preparation/test/ExploreLF_v2.r')
source('C:/Users/berge057/OneDrive - WageningenUR/projects/surveys/2019_HERAS/post_cruise/preparation/test/ExploreLF_v2.r')
source('C:/Users/berge057/OneDrive - WageningenUR/projects/surveys/2019_HERAS/post_cruise/preparation/test/ExploreLF_v2.r')
source('C:/Users/berge057/OneDrive - WageningenUR/projects/surveys/2019_HERAS/post_cruise/preparation/test/ExploreLF_v2.r')
source('C:/Users/berge057/OneDrive - WageningenUR/projects/surveys/2019_HERAS/post_cruise/preparation/test/ExploreLF_v2.r')
source('C:/Users/berge057/OneDrive - WageningenUR/projects/surveys/2019_HERAS/post_cruise/preparation/test/ExploreLF_v2.r')
source('C:/Users/berge057/OneDrive - WageningenUR/projects/surveys/2019_HERAS/post_cruise/preparation/test/ExploreLF_v2.r')
